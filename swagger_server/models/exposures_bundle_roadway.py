# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ExposuresBundleRoadway(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, roadtype: str=None, distance: float=None, aadt: float=None, speed: float=None, through_lanes: float=None):  # noqa: E501
        """ExposuresBundleRoadway - a model defined in Swagger

        :param name: The name of this ExposuresBundleRoadway.  # noqa: E501
        :type name: str
        :param roadtype: The roadtype of this ExposuresBundleRoadway.  # noqa: E501
        :type roadtype: str
        :param distance: The distance of this ExposuresBundleRoadway.  # noqa: E501
        :type distance: float
        :param aadt: The aadt of this ExposuresBundleRoadway.  # noqa: E501
        :type aadt: float
        :param speed: The speed of this ExposuresBundleRoadway.  # noqa: E501
        :type speed: float
        :param through_lanes: The through_lanes of this ExposuresBundleRoadway.  # noqa: E501
        :type through_lanes: float
        """
        self.swagger_types = {
            'name': str,
            'roadtype': str,
            'distance': float,
            'aadt': float,
            'speed': float,
            'through_lanes': float
        }

        self.attribute_map = {
            'name': 'name',
            'roadtype': 'roadtype',
            'distance': 'distance',
            'aadt': 'aadt',
            'speed': 'speed',
            'through_lanes': 'through_lanes'
        }

        self._name = name
        self._roadtype = roadtype
        self._distance = distance
        self._aadt = aadt
        self._speed = speed
        self._through_lanes = through_lanes

    @classmethod
    def from_dict(cls, dikt) -> 'ExposuresBundleRoadway':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExposuresBundle_roadway of this ExposuresBundleRoadway.  # noqa: E501
        :rtype: ExposuresBundleRoadway
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this ExposuresBundleRoadway.


        :return: The name of this ExposuresBundleRoadway.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this ExposuresBundleRoadway.


        :param name: The name of this ExposuresBundleRoadway.
        :type name: str
        """

        self._name = name

    @property
    def roadtype(self) -> str:
        """Gets the roadtype of this ExposuresBundleRoadway.


        :return: The roadtype of this ExposuresBundleRoadway.
        :rtype: str
        """
        return self._roadtype

    @roadtype.setter
    def roadtype(self, roadtype: str):
        """Sets the roadtype of this ExposuresBundleRoadway.


        :param roadtype: The roadtype of this ExposuresBundleRoadway.
        :type roadtype: str
        """

        self._roadtype = roadtype

    @property
    def distance(self) -> float:
        """Gets the distance of this ExposuresBundleRoadway.


        :return: The distance of this ExposuresBundleRoadway.
        :rtype: float
        """
        return self._distance

    @distance.setter
    def distance(self, distance: float):
        """Sets the distance of this ExposuresBundleRoadway.


        :param distance: The distance of this ExposuresBundleRoadway.
        :type distance: float
        """

        self._distance = distance

    @property
    def aadt(self) -> float:
        """Gets the aadt of this ExposuresBundleRoadway.


        :return: The aadt of this ExposuresBundleRoadway.
        :rtype: float
        """
        return self._aadt

    @aadt.setter
    def aadt(self, aadt: float):
        """Sets the aadt of this ExposuresBundleRoadway.


        :param aadt: The aadt of this ExposuresBundleRoadway.
        :type aadt: float
        """

        self._aadt = aadt

    @property
    def speed(self) -> float:
        """Gets the speed of this ExposuresBundleRoadway.


        :return: The speed of this ExposuresBundleRoadway.
        :rtype: float
        """
        return self._speed

    @speed.setter
    def speed(self, speed: float):
        """Sets the speed of this ExposuresBundleRoadway.


        :param speed: The speed of this ExposuresBundleRoadway.
        :type speed: float
        """

        self._speed = speed

    @property
    def through_lanes(self) -> float:
        """Gets the through_lanes of this ExposuresBundleRoadway.


        :return: The through_lanes of this ExposuresBundleRoadway.
        :rtype: float
        """
        return self._through_lanes

    @through_lanes.setter
    def through_lanes(self, through_lanes: float):
        """Sets the through_lanes of this ExposuresBundleRoadway.


        :param through_lanes: The through_lanes of this ExposuresBundleRoadway.
        :type through_lanes: float
        """

        self._through_lanes = through_lanes
