# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ExposuresBundleCmaqCmaqOutput(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, date_time: datetime=None, value: float=None):  # noqa: E501
        """ExposuresBundleCmaqCmaqOutput - a model defined in Swagger

        :param date_time: The date_time of this ExposuresBundleCmaqCmaqOutput.  # noqa: E501
        :type date_time: datetime
        :param value: The value of this ExposuresBundleCmaqCmaqOutput.  # noqa: E501
        :type value: float
        """
        self.swagger_types = {
            'date_time': datetime,
            'value': float
        }

        self.attribute_map = {
            'date_time': 'date_time',
            'value': 'value'
        }

        self._date_time = date_time
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'ExposuresBundleCmaqCmaqOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExposuresBundle_cmaq_cmaq_output of this ExposuresBundleCmaqCmaqOutput.  # noqa: E501
        :rtype: ExposuresBundleCmaqCmaqOutput
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_time(self) -> datetime:
        """Gets the date_time of this ExposuresBundleCmaqCmaqOutput.


        :return: The date_time of this ExposuresBundleCmaqCmaqOutput.
        :rtype: datetime
        """
        return self._date_time

    @date_time.setter
    def date_time(self, date_time: datetime):
        """Sets the date_time of this ExposuresBundleCmaqCmaqOutput.


        :param date_time: The date_time of this ExposuresBundleCmaqCmaqOutput.
        :type date_time: datetime
        """

        self._date_time = date_time

    @property
    def value(self) -> float:
        """Gets the value of this ExposuresBundleCmaqCmaqOutput.


        :return: The value of this ExposuresBundleCmaqCmaqOutput.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value: float):
        """Sets the value of this ExposuresBundleCmaqCmaqOutput.


        :param value: The value of this ExposuresBundleCmaqCmaqOutput.
        :type value: float
        """

        self._value = value
